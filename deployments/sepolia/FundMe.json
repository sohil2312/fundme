{
  "address": "0x8e301b1978580672E172681045C38a3c85Db925c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "PriceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x919960d17903cb68f34e3e89b85a8e6b17f213361b6a3af63c94fc0907b0f09e",
  "receipt": {
    "to": null,
    "from": "0x50aF3F4DC9EbE552cC7fE781068a55ae8c6b3eC8",
    "contractAddress": "0x8e301b1978580672E172681045C38a3c85Db925c",
    "transactionIndex": 31,
    "gasUsed": "886977",
    "logsBloom": "0x
    "blockHash": "0xb49ca9670e2b0224462377474c258f490ef52945b112a721b6d0235a8cf575c7",
    "transactionHash": "0x919960d17903cb68f34e3e89b85a8e6b17f213361b6a3af63c94fc0907b0f09e",
    "logs": [],
    "blockNumber": 5751713,
    "cumulativeGasUsed": "5442663",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "7d24d2ad783fad42b5445e2bd1f6bf74",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"PriceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface public priceFeed;\\n    constructor(address PriceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(PriceFeedAddress);\\n\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        // ETH/USD price feed address of Sepolia Network.\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n        return priceFeed.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\",\"keccak256\":\"0x556cc8000259e9d0921375bed2ac2506ce50133d1b13f16f4d7e77b4a99e6012\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Sepolia ETH / USD Address\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n       \\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount,AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x511512daa32eb17b4d06938552df35430c4267d7257c4d3ec7ac1d3dba68f956\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610f97380380610f978339818101604052810190610032919061011d565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b610e3e806101596000396000f3fe60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba9190610821565b60405180910390f35b3480156100cf57600080fd5b506100d86103a8565b005b3480156100e657600080fd5b5061010160048036038101906100fc919061089f565b6105e4565b60405161010e9190610821565b60405180910390f35b34801561012357600080fd5b5061012c6105fc565b6040516101399190610821565b60405180910390f35b34801561014e57600080fd5b50610157610609565b604051610164919061092b565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c61062f565b6040516101999190610955565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c4919061099c565b610655565b6040516101d69190610955565b60405180910390f35b6802b5e3af16b188000061021e600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461069490919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a26565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a75565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008073694aa1769357215de4fac081bf1f309adc32530690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa15801561037e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a29190610abe565b91505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042f576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104d45760006001828154811061045557610454610aeb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610432565b50600067ffffffffffffffff8111156104f0576104ef610b1a565b5b60405190808252806020026020018201604052801561051e5781602001602082028036833780820191505090505b5060019080519060200190610534929190610761565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161055b90610b7a565b60006040518083038185875af1925050503d8060008114610598576040519150601f19603f3d011682016040523d82523d6000602084013e61059d565b606091505b50509050806105e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d890610bdb565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061066557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106a0836106d0565b90506000670de0b6b3a764000085836106b99190610bfb565b6106c39190610c6c565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561071e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107429190610d15565b5050509150506402540be400816107599190610d90565b915050919050565b8280548282559060005260206000209081019282156107da579160200282015b828111156107d95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610781565b5b5090506107e791906107eb565b5090565b5b808211156108045760008160009055506001016107ec565b5090565b6000819050919050565b61081b81610808565b82525050565b60006020820190506108366000830184610812565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061086c82610841565b9050919050565b61087c81610861565b811461088757600080fd5b50565b60008135905061089981610873565b92915050565b6000602082840312156108b5576108b461083c565b5b60006108c38482850161088a565b91505092915050565b6000819050919050565b60006108f16108ec6108e784610841565b6108cc565b610841565b9050919050565b6000610903826108d6565b9050919050565b6000610915826108f8565b9050919050565b6109258161090a565b82525050565b6000602082019050610940600083018461091c565b92915050565b61094f81610861565b82525050565b600060208201905061096a6000830184610946565b92915050565b61097981610808565b811461098457600080fd5b50565b60008135905061099681610970565b92915050565b6000602082840312156109b2576109b161083c565b5b60006109c084828501610987565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a10601b836109c9565b9150610a1b826109da565b602082019050919050565b60006020820190508181036000830152610a3f81610a03565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a8082610808565b9150610a8b83610808565b9250828201905080821115610aa357610aa2610a46565b5b92915050565b600081519050610ab881610970565b92915050565b600060208284031215610ad457610ad361083c565b5b6000610ae284828501610aa9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b64600083610b49565b9150610b6f82610b54565b600082019050919050565b6000610b8582610b57565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bc5600b836109c9565b9150610bd082610b8f565b602082019050919050565b60006020820190508181036000830152610bf481610bb8565b9050919050565b6000610c0682610808565b9150610c1183610808565b9250828202610c1f81610808565b91508282048414831517610c3657610c35610a46565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c7782610808565b9150610c8283610808565b925082610c9257610c91610c3d565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cbc81610c9d565b8114610cc757600080fd5b50565b600081519050610cd981610cb3565b92915050565b6000819050919050565b610cf281610cdf565b8114610cfd57600080fd5b50565b600081519050610d0f81610ce9565b92915050565b600080600080600060a08688031215610d3157610d3061083c565b5b6000610d3f88828901610cca565b9550506020610d5088828901610d00565b9450506040610d6188828901610aa9565b9350506060610d7288828901610aa9565b9250506080610d8388828901610cca565b9150509295509295909350565b6000610d9b82610cdf565b9150610da683610cdf565b9250828202610db481610cdf565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610dec57610deb610a46565b5b8282058414831517610e0157610e00610a46565b5b509291505056fea26469706673582212209ffaf9b9139211ec0456220dc2871124527378bfcc0ccd09e3d8be100a9bcc1264736f6c63430008180033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba9190610821565b60405180910390f35b3480156100cf57600080fd5b506100d86103a8565b005b3480156100e657600080fd5b5061010160048036038101906100fc919061089f565b6105e4565b60405161010e9190610821565b60405180910390f35b34801561012357600080fd5b5061012c6105fc565b6040516101399190610821565b60405180910390f35b34801561014e57600080fd5b50610157610609565b604051610164919061092b565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c61062f565b6040516101999190610955565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c4919061099c565b610655565b6040516101d69190610955565b60405180910390f35b6802b5e3af16b188000061021e600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461069490919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a26565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a75565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008073694aa1769357215de4fac081bf1f309adc32530690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa15801561037e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a29190610abe565b91505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042f576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104d45760006001828154811061045557610454610aeb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610432565b50600067ffffffffffffffff8111156104f0576104ef610b1a565b5b60405190808252806020026020018201604052801561051e5781602001602082028036833780820191505090505b5060019080519060200190610534929190610761565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161055b90610b7a565b60006040518083038185875af1925050503d8060008114610598576040519150601f19603f3d011682016040523d82523d6000602084013e61059d565b606091505b50509050806105e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d890610bdb565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061066557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106a0836106d0565b90506000670de0b6b3a764000085836106b99190610bfb565b6106c39190610c6c565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561071e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107429190610d15565b5050509150506402540be400816107599190610d90565b915050919050565b8280548282559060005260206000209081019282156107da579160200282015b828111156107d95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610781565b5b5090506107e791906107eb565b5090565b5b808211156108045760008160009055506001016107ec565b5090565b6000819050919050565b61081b81610808565b82525050565b60006020820190506108366000830184610812565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061086c82610841565b9050919050565b61087c81610861565b811461088757600080fd5b50565b60008135905061089981610873565b92915050565b6000602082840312156108b5576108b461083c565b5b60006108c38482850161088a565b91505092915050565b6000819050919050565b60006108f16108ec6108e784610841565b6108cc565b610841565b9050919050565b6000610903826108d6565b9050919050565b6000610915826108f8565b9050919050565b6109258161090a565b82525050565b6000602082019050610940600083018461091c565b92915050565b61094f81610861565b82525050565b600060208201905061096a6000830184610946565b92915050565b61097981610808565b811461098457600080fd5b50565b60008135905061099681610970565b92915050565b6000602082840312156109b2576109b161083c565b5b60006109c084828501610987565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a10601b836109c9565b9150610a1b826109da565b602082019050919050565b60006020820190508181036000830152610a3f81610a03565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a8082610808565b9150610a8b83610808565b9250828201905080821115610aa357610aa2610a46565b5b92915050565b600081519050610ab881610970565b92915050565b600060208284031215610ad457610ad361083c565b5b6000610ae284828501610aa9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b64600083610b49565b9150610b6f82610b54565b600082019050919050565b6000610b8582610b57565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bc5600b836109c9565b9150610bd082610b8f565b602082019050919050565b60006020820190508181036000830152610bf481610bb8565b9050919050565b6000610c0682610808565b9150610c1183610808565b9250828202610c1f81610808565b91508282048414831517610c3657610c35610a46565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c7782610808565b9150610c8283610808565b925082610c9257610c91610c3d565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cbc81610c9d565b8114610cc757600080fd5b50565b600081519050610cd981610cb3565b92915050565b6000819050919050565b610cf281610cdf565b8114610cfd57600080fd5b50565b600081519050610d0f81610ce9565b92915050565b600080600080600060a08688031215610d3157610d3061083c565b5b6000610d3f88828901610cca565b9550506020610d5088828901610d00565b9450506040610d6188828901610aa9565b9350506060610d7288828901610aa9565b9250506080610d8388828901610cca565b9150509295509295909350565b6000610d9b82610cdf565b9150610da683610cdf565b9250828202610db481610cdf565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610dec57610deb610a46565b5b8282058414831517610e0157610e00610a46565b5b509291505056fea26469706673582212209ffaf9b9139211ec0456220dc2871124527378bfcc0ccd09e3d8be100a9bcc1264736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}